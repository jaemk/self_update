# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    - CRATE_NAME=self_update

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=i686-unknown-linux-gnu
    #- env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    # - env: TARGET=i686-apple-darwin
    #   os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    ## Other architectures
    #- env: TARGET=aarch64-unknown-linux-gnu
    #- env: TARGET=armv7-unknown-linux-gnueabihf
    #- env: TARGET=mips-unknown-linux-gnu
    #- env: TARGET=mips64-unknown-linux-gnuabi64
    #- env: TARGET=mips64el-unknown-linux-gnuabi64
    #- env: TARGET=mipsel-unknown-linux-gnu
    #- env: TARGET=powerpc-unknown-linux-gnu
    #- env: TARGET=powerpc64-unknown-linux-gnu
    #- env: TARGET=powerpc64le-unknown-linux-gnu
    #- env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly
  allow_failures:
    - rust: nightly
  fast_finish: true

before_install:
  - set -e
  - rustup self update
  - rustup component add rustfmt-preview clippy

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: ZH4sTdq0/OBkz65DUl5nSjaQtnSmMThP2ZqHzQKLs8ogbm5NLJPKxD1JCOpb4fBK3loOBGXLeziBVz8aPefi0Gb9Po/aaY3hRWUrvgj43K4Y1Rkj63Ibf3nMm/GN4hZv5ZPyyY/eYXW6Wb7BuYKKKKxuSIYJ/2/CWB1Amc5cjfkZJ4QZ0VA0JL013GznSyuD9D0cJmVy3XYLKLYyrG8XaYr1i9TdK5kQcXsadTeqV7tldHP8d4mc0f1VYoFxX6IMpOO5qI99n9nw/Cac5BngZWnNGAtuzep/U6thnJr4AAFxKvgkDvLWc61jJFzJ6PEWOGJSWgxARwJMdzSNgQP6YqZbD9Vfh7gA7g0xgdXqn8XGe6tI9wr+2IY4orDhJ21nG8UGj3+zHIJa5Pi+gICoZ/6jAEnCB9aAP7O05o+iH5xROaabr9poyYb0LI7bohpzjxEqtP+jcMuyo56xktO2RT12pgGJPEEB9epqjqPYQkoyXyDbJvdGzYjHUfEtnkMK90QrfDe/XwTeqXh9Iiy53babI2gqoBSv3v3E0SEtGfdp72K6uvDPh4MgngT2d+BYGwMlX1Ooojxuwf9VUpZ+OsWqs4APv06YtellAtIvMZxntSNcpo7TB9YgY45C/GOtRj3GLgMaqUM+WNfW+fVu2AAqPAxiidIl6hpNJrnAllw=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
